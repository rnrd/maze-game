{"version":3,"sources":["redux/actions/ActionTypes.js","Maze.js","Buttons.js","redux/actions/Actions.js","Timer.js","App.js","reportWebVitals.js","redux/reducers/initialState.js","redux/reducers/IteratorReducer.js","redux/reducers/ReducersIndex.js","index.js","redux/reducers/ConfigureStore.js"],"names":["RIGHTCLICK","LEFTCLICK","TOPCLICK","BOTTOMCLICK","Maze","cellWidth","a","useSelector","state","iteratorReducer","shallowEqual","b","iteratorRight","Iterators","iteratorLeft","iteratorTop","iteratorBottom","pastArray","useEffect","console","log","Container","className","setup","p5","canvasParentRef","createCanvas","parent","draw","background","j","y","stroke","line","i","x","fill","rect","n","length","Buttons","checkList","alertDelay","ms","Promise","res","setTimeout","checkGame","alertify","error","window","location","reload","refreshPage","useState","buttonState","setButtonState","buttonClick","arrayADispatch","useDispatch","arrayBDispatch","rightClickDispatch","iterateRight","type","actionTypes","payload","leftClickDispatch","iterateLeft","topClickDispatch","iterateTop","bottomClickDispatch","iterateBottom","data","addDataToArrayA","addDataToArrayB","pushDataToArrayB","Row","Col","Button","color","sm","block","onClick","e","Timer","expiryTimestamp","useTimer","onExpire","seconds","minutes","success","style","fontSize","App","time","Date","setSeconds","getSeconds","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","newState","width","height","push","left_a","left_b","newLeftArray","LeftArray","leftCheck","rigth_a","right_b","newRightArray","rightArray","rightCheck","top_a","top_b","newTopArray","topArray","topCheck","bottom_a","bottom_b","newBottomArray","bottomArray","bottomCheck","allReducers","combineReducers","Store","createStore","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.cbb03916.chunk.js","sourcesContent":["export const RIGHTCLICK=\"RIGHTCLICK\";\r\nexport const LEFTCLICK=\"LEFTCLICK\";\r\nexport const TOPCLICK=\"TOPCLICK\";\r\nexport const BOTTOMCLICK=\"BOTTOMCLICK\";\r\nexport const ADDDATATOARRAYA=\"ADDDATATOARRAYA\";\r\nexport const ADDDATATOARRAYB=\"ADDDATATOARRAYB\";\r\n","import React from 'react';\r\nimport Sketch from \"react-p5\";\r\nimport { useEffect } from 'react';\r\nimport {useSelector, shallowEqual} from \"react-redux\";\r\nimport {Container} from \"reactstrap\";\r\nimport \"./css/Maze.css\";\r\n\r\n\r\nfunction Maze() {\r\n\r\n    var width=800;\r\n    var height=400;\r\n    var cellWidth = 20;\r\n    const a=useSelector(state=>state.iteratorReducer.a,shallowEqual);\r\n    const b=useSelector(state=>state.iteratorReducer.b,shallowEqual);\r\n\r\n\r\n\r\n    const iteratorRight=useSelector(state=>state.iteratorReducer.Iterators.iteratorRight,shallowEqual);\r\n    const iteratorLeft=useSelector(state=>state.iteratorReducer.Iterators.iteratorLeft,shallowEqual);\r\n    const iteratorTop=useSelector(state=>state.iteratorReducer.Iterators.iteratorTop,shallowEqual);\r\n    const iteratorBottom=useSelector(state=>state.iteratorReducer.Iterators.iteratorBottom,shallowEqual);\r\n    \r\n\r\n    const pastArray=useSelector(state=>state.iteratorReducer.pastArray,shallowEqual);\r\n\r\n    const setup = (p5, canvasParentRef) => {\r\n\t\tp5.createCanvas(width, height).parent(canvasParentRef);\r\n        \r\n\t};\r\n\r\n\r\n\r\n    const draw =(p5) => {\r\n     \r\n\t\tp5.background(255);\r\n        \r\n        for(let j=0; j<=height;j++){\r\n            let y=j*cellWidth\r\n            p5.stroke(20, 50, 250);\r\n            p5.line(0,y,width,y)\r\n        }\r\n        for(let i=0; i<=width;i++){\r\n            let x=i*cellWidth\r\n            p5.stroke(20, 50, 250);\r\n            p5.line(x,0,x,height)\r\n        }\r\n\r\n        \r\n        p5.fill(100, 20, 120);\r\n\t\tp5.rect(a, b, cellWidth, cellWidth);   \r\n        \r\n        for(let n=0; n<pastArray.length;n++){\r\n           \r\n            p5.fill(100, 20, 120);\r\n\t\t    p5.rect(pastArray[n][0], pastArray[n][1], cellWidth, cellWidth); \r\n        }\r\n\r\n        \r\n\t};\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"use effect Maze\")\r\n        \r\n    }, [iteratorRight,iteratorLeft,iteratorTop,iteratorBottom])\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"Maze-container\">\r\n                <Sketch setup={setup} draw={draw}/>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Maze;\r\n","import React from 'react';\r\nimport { useState , useEffect } from 'react';\r\nimport {useSelector, useDispatch, shallowEqual} from \"react-redux\";\r\nimport {getRightClickData,getLeftClickData, getTopClickData, getBottomClickData, addDataToArrayA, addDataToArrayB} from \"./redux/actions/Actions\";\r\nimport {Button, Container, Row, Col} from \"reactstrap\";\r\nimport Maze from './Maze';\r\nimport \"./css/Button.css\";\r\nimport alertify from 'alertifyjs';\r\nimport 'alertifyjs/build/css/alertify.css';\r\n\r\nexport default function Buttons() {\r\n\r\n  const a = useSelector((state) => state.iteratorReducer.a, shallowEqual);\r\n  const b = useSelector((state) => state.iteratorReducer.b, shallowEqual);\r\n  const checkList=useSelector((state) => state.iteratorReducer.checkList, shallowEqual);\r\n\r\n  const alertDelay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n  const checkGame=async ()=>{\r\n    if(checkList[0] && checkList[1] && checkList[2] && checkList[3]){\r\n      alertify.error(\"Game is over!\");\r\n      await alertDelay(2000);\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  const refreshPage=async ()=>{\r\n    await alertDelay(200);\r\n    window.location.reload();\r\n  }\r\n\r\n\r\n  const [buttonState, setButtonState] = useState(false);\r\n  const buttonClick = () => {\r\n    if (!buttonState) {\r\n      setButtonState(true);\r\n    } else {\r\n      setButtonState(false);\r\n    }\r\n  };\r\n\r\n  const arrayADispatch = useDispatch();\r\n  const pushDataToArrayA = (data) => {\r\n    arrayADispatch(addDataToArrayA(data));\r\n  };\r\n\r\n  const arrayBDispatch = useDispatch();\r\n  const pushDataToArrayB = (data) => {\r\n    arrayBDispatch(addDataToArrayB(data));\r\n  };\r\n  const rightClickDispatch = useDispatch();\r\n  const iterateRight = () => {\r\n    rightClickDispatch(getRightClickData());\r\n  };\r\n\r\n  const leftClickDispatch = useDispatch();\r\n  const iterateLeft = () => {\r\n    leftClickDispatch(getLeftClickData());\r\n  };\r\n\r\n  const topClickDispatch = useDispatch();\r\n  const iterateTop = () => {\r\n    topClickDispatch(getTopClickData());\r\n  };\r\n\r\n  const bottomClickDispatch = useDispatch();\r\n  const iterateBottom = () => {\r\n    bottomClickDispatch(getBottomClickData());\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"use effect\");\r\n    pushDataToArrayA(a);\r\n    pushDataToArrayB(b);\r\n    checkGame()\r\n    console.log(checkList);\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [buttonState]);\r\n\r\n    return (\r\n      <div>\r\n        <Container className=\"maze-container\">\r\n            <Row>\r\n              <Row>\r\n              <Col >\r\n              <Button color=\"success\" sm=\"lg\" block className=\"button\" onClick={(e) => {\r\n                iterateTop();\r\n                buttonClick();\r\n                }}>\r\n                Move Up\r\n              </Button>\r\n              </Col>\r\n              </Row>\r\n              <Row>\r\n              <Col>\r\n              <Button color=\"success\" sm=\"lg\" block className=\"button\" onClick={(e) => {\r\n                iterateLeft();\r\n                buttonClick();\r\n                }}>\r\n                Move Left\r\n              </Button>\r\n            </Col>\r\n            <Col >\r\n              <Button color=\"success\" sm=\"lg\"  className=\"button\" onClick={(e) => {\r\n                iterateRight();\r\n                buttonClick();\r\n                }}>\r\n                Move Right\r\n              </Button>\r\n            </Col>\r\n              </Row>\r\n              <Row>\r\n              <Col >\r\n              <Button color=\"success\" sm=\"lg\" block className=\"button\" onClick={(e) => {\r\n                iterateBottom();\r\n                buttonClick();\r\n                }}>\r\n                Move Down\r\n              </Button>\r\n              </Col>\r\n              </Row>\r\n          </Row>\r\n        </Container>\r\n        <Container>\r\n            <Maze/>\r\n            <Row>\r\n              <Col sm=\"3\" className=\"offset-5\">\r\n              <Button color=\"warning\" sm=\"lg\"  className=\"button\" block onClick={(e) => {\r\n                refreshPage()\r\n                }}>\r\n                Refresh\r\n              </Button>\r\n              </Col>\r\n              </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n}\r\n","import * as actionTypes from \"./ActionTypes\";\r\n\r\nexport const getRightClickData=()=>{\r\n    return {\r\n        type:actionTypes.RIGHTCLICK,\r\n        payload:1\r\n    }\r\n}\r\n\r\nexport const getLeftClickData=()=>{\r\n    return {\r\n        type:actionTypes.LEFTCLICK,\r\n        payload:1\r\n    }\r\n}\r\n\r\nexport const getTopClickData=()=>{\r\n    return {\r\n        type:actionTypes.TOPCLICK,\r\n        payload:1\r\n    }\r\n}\r\n\r\nexport const getBottomClickData=()=>{\r\n    return {\r\n        type:actionTypes.BOTTOMCLICK,\r\n        payload:1\r\n    }\r\n}\r\n\r\nexport const addDataToArrayA=(data)=>{\r\n    return {\r\n        type:actionTypes.ADDDATATOARRAYA,\r\n        payload:data\r\n    }\r\n}\r\n\r\nexport const addDataToArrayB=(data)=>{\r\n    return {\r\n        type:actionTypes.ADDDATATOARRAYB,\r\n        payload:data\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { useTimer } from 'react-timer-hook';\r\nimport {useEffect } from 'react';\r\nimport \"./css/Timer.css\";\r\nimport alertify from 'alertifyjs';\r\nimport 'alertifyjs/build/css/alertify.css';\r\n\r\nfunction Timer({ expiryTimestamp }) {\r\n\r\n\r\n  const alertDelay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n\r\n  const {\r\n    seconds,\r\n    minutes\r\n  } = useTimer({ expiryTimestamp, onExpire: async () => {\r\n    alertify.error(\"Game is over!\");\r\n    await alertDelay(2000);\r\n    window.location.reload();\r\n  } });\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    console.log(\"Timer useeffect\");\r\n    alertify.success(\"Start !\");\r\n\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"Timer-main-div\">\r\n        <h1>Timer</h1>\r\n        <div style={{fontSize: '100px'}}>\r\n        <span>{minutes}</span>:<span>{seconds}</span>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;","import './App.css';\nimport Buttons from './Buttons';\nimport Timer from \"./Timer\";\nimport {Container, Row, Col} from \"reactstrap\";\n\n\nfunction App() {\n\n\n  const time = new Date();\n  time.setSeconds(time.getSeconds() + 120); \n\n\n\n  return (\n    <div className=\"App\">\n      <Container>\n      <Row>\n      <Col sm=\"8\">\n      <h1 className=\"app-h1\">Maze Game</h1>\n        </Col>\n       </Row>\n       <Container>\n         <Row>\n           <Col sm=\"8\">\n           <Buttons/>\n           </Col>\n           <Col sm=\"4\">\n           <Timer  expiryTimestamp={time}/>\n           </Col>\n        </Row>\n       </Container>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState=\r\n{\r\n    a:0,\r\n    b:0,\r\n    pastArray:[[0,0]],\r\n    checkList:[false,false,false,false],\r\n\r\n    Iterators:{\r\n        iteratorRight:0,\r\n        iteratorLeft:0,\r\n        iteratorTop:0,\r\n        iteratorBottom:0\r\n    },\r\n\r\n\r\n}","import {initialState} from \"./initialState\";\r\nimport * as actionTypes from \"../actions/ActionTypes\";\r\n\r\nconst iteratorReducer=(state=initialState,action)=>{\r\n    var newState=state;\r\n    var cellWidth=20;\r\n    var width=800;\r\n    var height=400;\r\n    var checkList=newState.checkList;\r\n    switch(action.type){\r\n        case actionTypes.LEFTCLICK:\r\n\r\n            newState.pastArray.push([newState.a,newState.b]);\r\n            let left_a=newState.a-cellWidth;\r\n            let left_b=newState.b\r\n            if(left_a<0 || left_b<0 || left_a>=width || left_b >= height){\r\n                return newState;\r\n            }\r\n            var newLeftArray=[[left_a,left_b]];\r\n            let LeftArray=newState.pastArray;\r\n            let leftCheck=false;\r\n\r\n            for(let i=0; i<LeftArray.length;i++){\r\n                if(newLeftArray[0][0]===LeftArray[i][0] && newLeftArray[0][1]===LeftArray[i][1]){\r\n                    \r\n                    leftCheck=true;\r\n                    checkList[0]=true;\r\n                    \r\n                }\r\n            }\r\n            if(leftCheck){\r\n                return newState;\r\n            }\r\n            else{\r\n                checkList[0]=false;\r\n                newState.a=left_a;\r\n                newState.b=left_b;\r\n                newState.Iterators.iteratorLeft+=action.payload;\r\n                return newState;\r\n            }\r\n\r\n            case actionTypes.RIGHTCLICK:\r\n            \r\n            newState.pastArray.push([newState.a,newState.b]);\r\n            let rigth_a=newState.a+cellWidth;\r\n            let right_b=newState.b;\r\n\r\n            if(rigth_a<0 || right_b<0 || rigth_a>=width || right_b >= height){\r\n                return newState;\r\n            }\r\n\r\n            let newRightArray=[[rigth_a,right_b]];\r\n            let rightArray=newState.pastArray;\r\n            let rightCheck=false;\r\n\r\n            for(let i=0; i<rightArray.length;i++){\r\n                if(newRightArray[0][0]===rightArray[i][0] && newRightArray[0][1]===rightArray[i][1]){\r\n                    rightCheck=true;\r\n                    checkList[1]=true;\r\n                    \r\n                }\r\n            }\r\n            if(rightCheck){\r\n                \r\n                return newState;\r\n            }\r\n            else{\r\n                checkList[1]=false;\r\n                newState.a=rigth_a;\r\n                newState.b=right_b;\r\n                newState.Iterators.iteratorRight+=action.payload;\r\n                return newState;\r\n            }\r\n\r\n            case actionTypes.TOPCLICK:\r\n            \r\n                newState.pastArray.push([newState.a,newState.b]);\r\n                let top_a=newState.a;\r\n                let top_b=newState.b-cellWidth;\r\n\r\n                if(top_a<0 || top_b<0 || top_a>=width || top_b >= height){\r\n                    return newState;\r\n                }\r\n                \r\n                let newTopArray=[[top_a,top_b]];\r\n                let topArray=newState.pastArray\r\n                let topCheck=false;\r\n    \r\n                for(let i=0; i<topArray.length;i++){\r\n                    if(newTopArray[0][0]===topArray[i][0] && newTopArray[0][1]===topArray[i][1]){\r\n                        \r\n                        topCheck=true;\r\n                        checkList[2]=true;\r\n                    }\r\n                }\r\n                if(topCheck){\r\n                   \r\n                    return newState;\r\n                }\r\n                else{\r\n                    checkList[2]=false;\r\n                    newState.a=top_a;\r\n                    newState.b=top_b;\r\n                    newState.Iterators.iteratorTop+=action.payload;\r\n                    return newState;\r\n                }\r\n\r\n                case actionTypes.BOTTOMCLICK:\r\n            \r\n                newState.pastArray.push([newState.a,newState.b]);\r\n                let bottom_a=newState.a;\r\n                let bottom_b=newState.b+cellWidth;\r\n\r\n                if(bottom_a<0 || bottom_b<0 || bottom_a>=width || bottom_b >= height){\r\n                    return newState;\r\n                }\r\n\r\n                let newBottomArray=[[bottom_a,bottom_b]];\r\n                let bottomArray=newState.pastArray;\r\n                let bottomCheck=false;\r\n    \r\n                for(let i=0; i<bottomArray.length;i++){\r\n                    if(newBottomArray[0][0]===bottomArray[i][0] && newBottomArray[0][1]===bottomArray[i][1]){\r\n                        \r\n                        \r\n                        bottomCheck=true;\r\n                        checkList[3]=true;\r\n                        \r\n                    }\r\n                }\r\n                if(bottomCheck){\r\n                    return newState;\r\n                }\r\n                else{\r\n                    checkList[3]=false;\r\n                    newState.a=bottom_a;\r\n                    newState.b=bottom_b;\r\n                    newState.Iterators.iteratorBottom+=action.payload;\r\n                    return newState;\r\n                }\r\n\r\n        default:\r\n            return newState;\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default iteratorReducer;","import {combineReducers} from \"redux\";\r\nimport iteratorReducer from \"./IteratorReducer\";\r\n\r\nconst allReducers=combineReducers(\r\n    {\r\n        iteratorReducer,\r\n    }\r\n);\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport configureStore from \"./redux/reducers/ConfigureStore\";\nimport {Provider} from \"react-redux\";\n\nexport const Store=configureStore();\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","import { createStore } from 'redux';\r\nimport allReducers from \"./ReducersIndex\";\r\n\r\n\r\nexport default function configureStore() {\r\n\r\n    return createStore(allReducers);\r\n}"],"sourceRoot":""}